@inject IJSRuntime JS
@inject AppDbContext _context

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Logo</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="userList">
                <span class="oi oi-list-rich" aria-hidden="true"></span> User List
            </NavLink>
        </div>
        <div>
            <button @onclick="GenerateReport">
                <span class="oi oi-person" aria-hidden="true" /> Generate report
            </button>
        </div>
    </nav>
</div>

<script>
    window.downloadFileFromStream = async (fileName, contentStreamReference) => {
        const arrayBuffer = await contentStreamReference.arrayBuffer();
        const blob = new Blob([arrayBuffer]);
        const url = URL.createObjectURL(blob);
        const anchorElement = document.createElement('a');
        anchorElement.href = url;
        anchorElement.download = fileName ?? '';
        anchorElement.click();
        anchorElement.remove();
        URL.revokeObjectURL(url);
    }
</script>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task GenerateReport()
    {
        var stream = new DotNetStreamReference(new ReportController(_context).GenerateReport());
        string fName = $"{DateTime.Now}.csv";
        await JS.InvokeVoidAsync("downloadFileFromStream", fName, stream);
    }
}
